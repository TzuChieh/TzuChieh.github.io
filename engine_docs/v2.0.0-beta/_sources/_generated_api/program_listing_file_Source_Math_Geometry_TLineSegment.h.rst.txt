
.. _program_listing_file_Source_Math_Geometry_TLineSegment.h:

Program Listing for File TLineSegment.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Math_Geometry_TLineSegment.h>` (``Source\Math\Geometry\TLineSegment.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Math/TVector3.h"
   
   #include <utility>
   
   namespace ph::math
   {
   
   template<typename T>
   class TLineSegment final
   {
   public:
       TLineSegment() = default;
   
       TLineSegment(const TVector3<T>& origin, const TVector3<T>& direction);
   
       TLineSegment(
           const TVector3<T>& origin, 
           const TVector3<T>& direction, 
           T                  minT, 
           T                  maxT);
   
       TLineSegment& flip();
   
       void setMinT(T t);
   
       void setMaxT(T t);
   
       void setRange(T minT, T maxT);
   
       void setRange(const std::pair<T, T>& minMaxT);
   
       void setOrigin(const TVector3<T>& pos);
   
       void setDirection(const TVector3<T>& dir);
   
       const TVector3<T>& getOrigin() const;
       const TVector3<T>& getDirection() const;
       T getMinT() const;
       T getMaxT() const;
       std::pair<T, T> getRange() const;
   
       TVector3<T> getTail() const;
   
       TVector3<T> getHead() const;
   
       TVector3<T> getPoint(T t) const;
   
   private:
       TVector3<T> m_origin;
       TVector3<T> m_direction;
       T           m_minT;
       T           m_maxT;
   };
   
   }// end namespace ph::math
   
   #include "Math/Geometry/TLineSegment.ipp"
