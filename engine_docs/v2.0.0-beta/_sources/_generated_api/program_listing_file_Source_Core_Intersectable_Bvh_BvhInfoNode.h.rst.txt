
.. _program_listing_file_Source_Core_Intersectable_Bvh_BvhInfoNode.h:

Program Listing for File BvhInfoNode.h
======================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_Intersectable_Bvh_BvhInfoNode.h>` (``Source\Core\Intersectable\Bvh\BvhInfoNode.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Common/primitive_type.h"
   #include "Math/Geometry/TAABB3D.h"
   #include "Core/Intersectable/Bvh/BvhIntersectableInfo.h"
   
   #include <vector>
   #include <cstddef>
   
   namespace ph
   {
   
   class Intersectable;
   
   class BvhInfoNode final
   {
   public:
       using AABB3D = math::AABB3D;
   
       static BvhInfoNode makeBinaryInternal(const BvhInfoNode* child1, const BvhInfoNode* child2, int32 splitAxis);
       static BvhInfoNode makeBinaryLeaf(const std::vector<BvhIntersectableInfo>& leafIntersectables, 
                                         const AABB3D& leafAabb);
   
   public:
       const BvhInfoNode*                children[2];
       AABB3D                            aabb;
       int32                             splitAxis;
       std::vector<BvhIntersectableInfo> intersectables;
   
       BvhInfoNode();
   
       bool isBinaryLeaf() const;
       bool isBinaryInternal() const;
   };
   
   }// end namespace ph
