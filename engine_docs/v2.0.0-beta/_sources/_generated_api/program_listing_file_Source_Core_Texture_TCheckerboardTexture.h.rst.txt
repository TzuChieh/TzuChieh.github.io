
.. _program_listing_file_Source_Core_Texture_TCheckerboardTexture.h:

Program Listing for File TCheckerboardTexture.h
===============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_Texture_TCheckerboardTexture.h>` (``Source\Core\Texture\TCheckerboardTexture.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Core/Texture/TTexture.h"
   
   #include <memory>
   
   namespace ph
   {
   
   template<typename OutputType>
   class TCheckerboardTexture : public TTexture<OutputType>
   {
   public:
       TCheckerboardTexture(
           real numUtiles, real numVtiles,
           const OutputType& oddValue, 
           const OutputType& evenValue);
   
       TCheckerboardTexture(
           real numUtiles, real numVtiles,
           const std::shared_ptr<TTexture<OutputType>>& oddTexture, 
           const std::shared_ptr<TTexture<OutputType>>& evenTexture);
   
       void sample(const SampleLocation& sampleLocation, OutputType* out_value) const override;
   
       void setOddTexture(const std::shared_ptr<TTexture<OutputType>>& oddTexture);
   
       void setEvenTexture(const std::shared_ptr<TTexture<OutputType>>& evenTexture);
   
       // Sets the scale factors of cell texture. Larger u-, v- and w-scale 
       // makes texture appears to be larger in the corresponding direction, 
       // and vice versa.
       //
       void setOddTextureScale(const math::Vector3R& sale);
       void setEvenTextureScale(const math::Vector3R& scale);
   
   private:
       std::shared_ptr<TTexture<OutputType>> m_oddTexture;
       std::shared_ptr<TTexture<OutputType>> m_evenTexture;
   
       real m_uTileSize;
       real m_vTileSize;
       math::Vector3R m_oddUvwScale;
       math::Vector3R m_evenUvwScale;
   };
   
   }// end namespace ph
   
   #include "Core/Texture/TCheckerboardTexture.ipp"
