
.. _program_listing_file_Source_EngineEnv_SampleSource_SampleSource.h:

Program Listing for File SampleSource.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_EngineEnv_SampleSource_SampleSource.h>` (``Source\EngineEnv\SampleSource\SampleSource.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "EngineEnv/CoreSdlResource.h"
   #include "DataIO/SDL/sdl_interface.h"
   
   namespace ph
   {
   
   class SampleSource : public CoreSdlResource
   {
   public:
       static constexpr ETypeCategory CATEGORY = ETypeCategory::Ref_SampleSource;
   
   public:
       inline SampleSource() = default;
   
       void cook(const CoreCookingContext& ctx, CoreCookedUnit& cooked) override = 0;
   
       ETypeCategory getDynamicCategory() const override;
   
   public:
       PH_DEFINE_SDL_CLASS(TOwnerSdlClass<SampleSource>)
       {
           ClassType clazz("sample-source");
           clazz.docName("Sample Source");
           clazz.description("Engine component for generating sample values.");
           return clazz;
       }
   };
   
   // In-header Implementations:
   
   inline ETypeCategory SampleSource::getDynamicCategory() const
   {
       return CATEGORY;
   }
   
   }// end namespace ph
