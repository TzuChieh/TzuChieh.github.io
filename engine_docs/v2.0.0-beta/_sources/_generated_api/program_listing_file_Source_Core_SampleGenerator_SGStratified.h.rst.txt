
.. _program_listing_file_Source_Core_SampleGenerator_SGStratified.h:

Program Listing for File SGStratified.h
=======================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_SampleGenerator_SGStratified.h>` (``Source\Core\SampleGenerator\SGStratified.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Core/SampleGenerator/SampleGenerator.h"
   #include "Common/primitive_type.h"
   
   #include <cstddef>
   #include <vector>
   
   namespace ph
   {
   
   // TODO: >= 3-D sample is straightforward
   
   class SGStratified : public SampleGenerator
   {
   public:
       explicit SGStratified(std::size_t numSamples);
   
   private:
       void genSamples1D(
           const SampleContext& context,
           const SampleStage&   stage,
           SamplesND            out_samples) override;
   
       void genSamples2D(
           const SampleContext& context,
           const SampleStage&   stage,
           SamplesND            out_samples) override;
   
       void reviseSampleStage(SampleStageReviser reviser) override;
       std::unique_ptr<SampleGenerator> genNewborn(std::size_t numSamples) const override;
   
       static std::vector<std::size_t> reviseDimSizeHints(
           std::size_t                     numSamples, 
           const std::vector<std::size_t>& originalDimSizeHints);
   };
   
   }// end namespace ph
