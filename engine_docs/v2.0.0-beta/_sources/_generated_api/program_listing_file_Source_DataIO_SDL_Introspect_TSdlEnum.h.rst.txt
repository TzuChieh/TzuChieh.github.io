
.. _program_listing_file_Source_DataIO_SDL_Introspect_TSdlEnum.h:

Program Listing for File TSdlEnum.h
===================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_DataIO_SDL_Introspect_TSdlEnum.h>` (``Source\DataIO\SDL\Introspect\TSdlEnum.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Common/assertion.h"
   
   #include <string_view>
   #include <type_traits>
   
   namespace ph { class SdlEnum; }
   
   namespace ph
   {
   
   template<typename EnumType>
   class TSdlEnum final
   {
       static_assert(std::is_enum_v<EnumType>,
           "EnumType must be an enum. Currently it is not.");
   
   public:
       EnumType operator [] (const std::string_view entryName) const;
   
       std::string_view operator [] (EnumType enumValue) const;
   };
   
   // In-header Implementations:
   
   template<typename EnumType>
   inline EnumType TSdlEnum<EnumType>::operator [] (const std::string_view entryName) const
   {
       PH_ASSERT_UNREACHABLE_SECTION();
   
       return static_cast<EnumType>(0);
   }
   
   template<typename EnumType>
   inline std::string_view TSdlEnum<EnumType>::operator [] (const EnumType enumValue) const
   {
       PH_ASSERT_UNREACHABLE_SECTION();
   
       return "";
   }
   
   }// end namespace ph
