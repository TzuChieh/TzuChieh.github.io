
.. _file_Source_Math_math.h:

File math.h
===========


Miscellaneous math utilities. 



.. contents:: Contents
   :local:
   :backlinks: none

Definition (``Source\Math\math.h``)
-----------------------------------


.. toctree::
   :maxdepth: 1

   program_listing_file_Source_Math_math.h.rst



Detailed Description
--------------------

If the standard library has the same/similar math utility defined, prefer the implementation here since most of them is developed with performance regarding to rendering in mind. 




Includes
--------


- ``Common/assertion.h``

- ``Common/compiler.h``

- ``Common/math_basics.h``

- ``Common/primitive_type.h``

- ``Math/constant.h``

- ``Math/math_fwd.h``

- ``Math/math_table.h``

- ``Utility/utility.h``

- ``algorithm``

- ``array``

- ``bit``

- ``climits``

- ``cmath``

- ``concepts``

- ``cstdint``

- ``limits``

- ``type_traits``

- ``utility`` (:ref:`file_Source_Common_utility.h`)

- ``vector``



Included By
-----------


- :ref:`file_Source_Actor_ALight.cpp`

- :ref:`file_Source_Actor_AModel.cpp`

- :ref:`file_Source_Actor_APhantomModel.cpp`

- :ref:`file_Source_Actor_ATransformedInstance.cpp`

- :ref:`file_Source_Actor_Dome_APreethamDome.cpp`

- :ref:`file_Source_Actor_Geometry_GCuboid.cpp`

- :ref:`file_Source_Actor_Geometry_GTriangle.cpp`

- :ref:`file_Source_Actor_Image_ConstantImage.cpp`

- :ref:`file_Source_Actor_PhysicalActor.cpp`

- :ref:`file_Source_Actor_SDLExtension_image_loaders.cpp`

- :ref:`file_Source_Core_Emitter_LatLongEnvEmitter.cpp`

- :ref:`file_Source_Core_Emitter_SurfaceEmitter.cpp`

- :ref:`file_Source_Core_Estimator_BNEEPTEstimator.cpp`

- :ref:`file_Source_Core_HitDetail.h`

- :ref:`file_Source_Core_HitInfo.h`

- :ref:`file_Source_Core_Intersectable_Bvh_BvhInfoNode.cpp`

- :ref:`file_Source_Core_Intersectable_DataStructure_IndexedUIntBuffer.h`

- :ref:`file_Source_Core_Intersectable_DataStructure_IndexedVertexBuffer.cpp`

- :ref:`file_Source_Core_Intersectable_PBasicSphere.cpp`

- :ref:`file_Source_Core_Intersectable_PTriangle.cpp`

- :ref:`file_Source_Core_Intersectable_UvwMapper_SphericalMapper.cpp`

- :ref:`file_Source_Core_LTABuildingBlock_RussianRoulette.h`

- :ref:`file_Source_Core_Receiver_PinholeCamera.cpp`

- :ref:`file_Source_Core_Renderer_PM_TSPPMRadianceEvaluator.h`

- :ref:`file_Source_Core_Renderer_Sampling_MetaRecordingProcessor.cpp`

- :ref:`file_Source_Core_SampleGenerator_Detail_halton.h`

- :ref:`file_Source_Core_SampleGenerator_SGHalton.cpp`

- :ref:`file_Source_Core_Scheduler_DammertzDispatcher.h`

- :ref:`file_Source_Core_Scheduler_GridScheduler.h`

- :ref:`file_Source_Core_Scheduler_PlateScheduler.h`

- :ref:`file_Source_Core_Scheduler_SpiralGridScheduler.h`

- :ref:`file_Source_Core_Scheduler_SpiralScheduler.h`

- :ref:`file_Source_Core_Scheduler_StripeScheduler.h`

- :ref:`file_Source_Core_Scheduler_TileScheduler.h`

- :ref:`file_Source_Core_SurfaceBehavior_BsdfHelper.h`

- :ref:`file_Source_Core_SurfaceBehavior_Property_AnisoTrowbridgeReitz.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_Property_IsoBeckmann.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_Property_IsoTrowbridgeReitz.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_LambertianDiffuse.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_LaurentBelcour_conversions.h`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_LaurentBelcour_TableFGD.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_LaurentBelcour_TableTIR.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_LerpedSurfaceOptics.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_OpaqueMicrofacet.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_OrenNayar.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_ThinDielectricFilm.cpp`

- :ref:`file_Source_Core_SurfaceBehavior_SurfaceOptics_TranslucentMicrofacet.cpp`

- :ref:`file_Source_Core_Texture_LdrRgbTexture2D.cpp`

- :ref:`file_Source_Core_Texture_Pixel_pixel_texture_basics.h`

- :ref:`file_Source_Core_Texture_Pixel_TPixelTexture2D.h`

- :ref:`file_Source_Core_Texture_TAbstractPixelTex2D.h`

- :ref:`file_Source_Core_Texture_TNearestPixelTex2D.h`

- :ref:`file_Source_DataIO_Data_IesData.cpp`

- :ref:`file_Source_EngineEnv_Observer_OrientedRasterObserver.cpp`

- :ref:`file_Source_EngineEnv_Observer_SingleLensObserver.cpp`

- :ref:`file_Source_Frame__mipmap_gen.h`

- :ref:`file_Source_Frame_TFrame.ipp`

- :ref:`file_Source_Math_Color_color_spaces.ipp`

- :ref:`file_Source_Math_Color_TSpectrumBase.ipp`

- :ref:`file_Source_Math_General_TVectorNBase.ipp`

- :ref:`file_Source_Math_Geometry_TAABB2D.ipp`

- :ref:`file_Source_Math_Geometry_TAABB3D.h`

- :ref:`file_Source_Math_Geometry_TSphere.h`

- :ref:`file_Source_Math_math.cpp`

- :ref:`file_Source_Math_Physics_black_body.h`

- :ref:`file_Source_Math_Random_sample.h`

- :ref:`file_Source_Math_Random_TPwcDistribution1D.ipp`

- :ref:`file_Source_Math_Random.cpp`

- :ref:`file_Source_Math_TOrthonormalBasis3.ipp`

- :ref:`file_Source_Math_Transform_TDecomposedTransform.h`

- :ref:`file_Source_Math_TVector2.ipp`

- :ref:`file_Source_Math_TVector3.ipp`

- :ref:`file_Source_Math_TVector4.ipp`

- :ref:`file_Source_Utility_Concurrent_concurrent.h`

- :ref:`file_Source_Utility_Concurrent_TSPSCRingBuffer.h`




Namespaces
----------


- :ref:`namespace_ph`

- :ref:`namespace_ph__math`

