
.. _program_listing_file_Source_Actor_Geometry_GMengerSponge.h:

Program Listing for File GMengerSponge.h
========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Actor_Geometry_GMengerSponge.h>` (``Source\Actor\Geometry\GMengerSponge.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Actor/Geometry/Geometry.h"
   #include "Common/primitive_type.h"
   #include "DataIO/SDL/sdl_interface.h"
   
   namespace ph
   {
   
   class GCuboid;
   
   class GMengerSponge final : public Geometry
   {
   public:
       GMengerSponge();
       explicit GMengerSponge(uint32 numIteration);
   
       void genPrimitive(
           const PrimitiveBuildingMaterial& data,
           std::vector<std::unique_ptr<Primitive>>& out_primitives) const override;
   
   private:
       uint32 m_numIteration;
   
       void genMengerSpongeRecursive(
           const math::Vector3R& minVertex,
           const math::Vector3R& maxVertex,
           uint32                currentIteration,
           std::vector<GCuboid>& cubes) const;
   
   public:
       PH_DEFINE_SDL_CLASS(TOwnerSdlClass<GMengerSponge>)
       {
           ClassType clazz("menger-sponge");
           clazz.docName("Menger Sponge Geometry");
           clazz.description("A fractal geometry.");
           clazz.baseOn<Geometry>();
   
           TSdlInteger<OwnerType, uint32> numIteration("iterations", &OwnerType::m_numIteration);
           numIteration.description("Number of iterations on the fractal surface detail.");
           numIteration.defaultTo(3);
           clazz.addField(numIteration);
   
           return clazz;
       }
   };
   
   }// end namespace ph
