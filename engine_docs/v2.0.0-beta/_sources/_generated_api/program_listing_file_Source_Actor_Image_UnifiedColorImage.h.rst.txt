
.. _program_listing_file_Source_Actor_Image_UnifiedColorImage.h:

Program Listing for File UnifiedColorImage.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Actor_Image_UnifiedColorImage.h>` (``Source\Actor\Image\UnifiedColorImage.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Actor/Image/Image.h"
   #include "Math/Color/color_enums.h"
   
   #include <memory>
   
   namespace ph
   {
   
   class UnifiedColorImage : public Image
   {
   public:
       UnifiedColorImage();
       explicit UnifiedColorImage(std::shared_ptr<Image> image);
       explicit UnifiedColorImage(math::Vector3R constant);
       UnifiedColorImage(math::Vector3R colorValue, math::EColorSpace colorSpace);
   
       std::shared_ptr<TTexture<Image::Array>> genNumericTexture(
           ActorCookingContext& ctx) override;
   
       std::shared_ptr<TTexture<math::Spectrum>> genColorTexture(
           ActorCookingContext& ctx) override;
   
       UnifiedColorImage& setImage(std::shared_ptr<Image> image);
       UnifiedColorImage& setConstant(math::Vector3R constant);
       UnifiedColorImage& setConstantColor(math::Vector3R colorValue, math::EColorSpace colorSpace);
       math::Vector3R getConstant() const;
       math::EColorSpace getConstantColorSpace() const;
   
   private:
       std::shared_ptr<Image> m_image;
       math::Vector3R         m_constant;
       math::EColorSpace      m_constantColorSpace;
   };
   
   }// end namespace ph
