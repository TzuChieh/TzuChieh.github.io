
.. _program_listing_file_Source_Common_Logger.h:

Program Listing for File Logger.h
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Common_Logger.h>` (``Source\Common\Logger.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Common/ELogLevel.h"
   
   #include <string>
   #include <string_view>
   #include <vector>
   #include <functional>
   #include <memory>
   
   namespace ph
   {
   
   class Logger final
   {
   public:
       using LogHandler = std::function<void(ELogLevel logLevel, std::string_view logString)>;
   
       Logger();
   
       void log(std::string_view message) const;
   
       void log(ELogLevel logLevel, std::string_view message) const;
   
       void log(
           std::string_view name,
           ELogLevel        logLevel, 
           std::string_view message) const;
   
       void addLogHandler(LogHandler logHandler);
   
   public:
       static LogHandler makeStdOutLogPrinter();
       static LogHandler makeColoredStdOutLogPrinter();
   
   private:
       std::vector<LogHandler> m_logHandlers;
   
       static std::string makeLogString(
           std::string_view name,
           ELogLevel        logLevel,
           std::string_view message);
   
       static bool shouldStdOutPrintWithoutBuffering(ELogLevel logLevel);
   };
   
   }// end namespace ph
