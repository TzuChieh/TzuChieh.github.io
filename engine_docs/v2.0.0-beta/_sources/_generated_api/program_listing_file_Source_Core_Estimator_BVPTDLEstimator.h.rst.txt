
.. _program_listing_file_Source_Core_Estimator_BVPTDLEstimator.h:

Program Listing for File BVPTDLEstimator.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_Estimator_BVPTDLEstimator.h>` (``Source\Core\Estimator\BVPTDLEstimator.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Core/Estimator/PartialRayEnergyEstimator.h"
   
   namespace ph
   {
   
   /*
       BVPTDL: Backward Vanilla Path Tracing Direct Lighting
   
       This estimator has properties similar to BVPT, excpet that it computes only
       direct lighting effects.
   */
   class BVPTDLEstimator : public PartialRayEnergyEstimator
   {
   public:
       void update(const Integrand& integrand) override;
   
       void estimate(
           const Ray&        ray,
           const Integrand&  integrand,
           SampleFlow&       sampleFlow,
           EnergyEstimation& out_estimation) const override;
   
       std::string toString() const override;
   };
   
   // In-header Implementations:
   
   inline void BVPTDLEstimator::update(const Integrand& integrand)
   {}
   
   inline std::string BVPTDLEstimator::toString() const
   {
       return "Backward Vanilla Path Tracing Direct Lighting Estimator";
   }
   
   }// end namespace ph
