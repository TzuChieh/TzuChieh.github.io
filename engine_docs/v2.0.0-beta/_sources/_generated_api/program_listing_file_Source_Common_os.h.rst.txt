
.. _program_listing_file_Source_Common_os.h:

Program Listing for File os.h
=============================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Common_os.h>` (``Source\Common\os.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <cstddef>
   
   // Defined on Windows x64 & x86
   #if defined(_WIN32)
   
       #define PH_OPERATING_SYSTEM_IS_WINDOWS
   
   // Defined on Linux
   #elif defined(__linux__)
   
       #define PH_OPERATING_SYSTEM_IS_LINUX
   
   // Defined on Apple platforms
   // Reference: https://stackoverflow.com/questions/12132933/preprocessor-macro-for-os-x-targets
   #elif defined(__APPLE__) || defined(__MACH__)
   
       #include <TargetConditionals.h>
   
       #if TARGET_OS_MAC == 1 && TARGET_OS_OSX == 1
           #define PH_OPERATING_SYSTEM_IS_OSX
       #else
           #error "Unsupported Apple operating system."
       #endif
   
   #else
   
       #error "Unsupported operating system."
   
   #endif
   
   namespace ph::os
   {
   
   enum class EWindowsVersion
   {
       Unknown = 0,
   
       // Later version must have larger value
   
       Windows_2000,
       Windows_XP,
       Windows_Vista,
       Windows_7,
       Windows_8,
       Windows_8_1,
       Windows_10
   };
   
   EWindowsVersion get_windows_version();
   
   std::size_t get_L1_cache_line_size_in_bytes();
   
   }// end namespace ph::os
