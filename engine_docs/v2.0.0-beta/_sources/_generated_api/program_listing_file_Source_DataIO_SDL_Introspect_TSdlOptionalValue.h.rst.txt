
.. _program_listing_file_Source_DataIO_SDL_Introspect_TSdlOptionalValue.h:

Program Listing for File TSdlOptionalValue.h
============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_DataIO_SDL_Introspect_TSdlOptionalValue.h>` (``Source\DataIO\SDL\Introspect\TSdlOptionalValue.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "DataIO/SDL/Introspect/TAbstractSdlValue.h"
   #include "Common/assertion.h"
   
   #include <string_view>
   #include <optional>
   
   namespace ph
   {
   
   template<typename T, typename Owner>
   class TSdlOptionalValue : public TAbstractSdlValue<T, Owner>
   {
   public:
       TSdlOptionalValue(
           std::string               typeName, 
           std::string               valueName, 
           std::optional<T> Owner::* valuePtr);
   
       std::string valueAsString(const T& value) const override = 0;
   
       void setValue(Owner& owner, T value) const override;
       const T* getValue(const Owner& owner) const override;
       void setValueToDefault(Owner& owner) const override;
   
       TSdlOptionalValue& description(std::string descriptionStr);
   
   protected:
       void loadFromSdl(
           Owner&                 owner,
           const SdlInputPayload& payload,
           const SdlInputContext& ctx) const override = 0;
   
       void saveToSdl(
           const Owner&            owner,
           SdlOutputPayload&       out_payload,
           const SdlOutputContext& ctx) const override = 0;
   
   private:
       std::optional<T> Owner::* m_valuePtr;
   };
   
   }// end namespace ph
   
   #include "DataIO/SDL/Introspect/TSdlOptionalValue.ipp"
