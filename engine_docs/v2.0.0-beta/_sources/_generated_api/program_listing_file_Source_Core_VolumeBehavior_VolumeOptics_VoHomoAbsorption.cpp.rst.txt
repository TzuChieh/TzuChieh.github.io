
.. _program_listing_file_Source_Core_VolumeBehavior_VolumeOptics_VoHomoAbsorption.cpp:

Program Listing for File VoHomoAbsorption.cpp
=============================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_VolumeBehavior_VolumeOptics_VoHomoAbsorption.cpp>` (``Source\Core\VolumeBehavior\VolumeOptics\VoHomoAbsorption.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #include "Core/VolumeBehavior/VolumeOptics/VoHomoAbsorption.h"
   #include "Core/VolumeBehavior/BlockFunction/BfConstant.h"
   #include "Common/assertion.h"
   #include "Math/Random.h"
   
   #include <cmath>
   
   namespace ph
   {
   
   VoHomoAbsorption::VoHomoAbsorption() : 
       VoHomoAbsorption(std::make_unique<BfConstant>())
   {}
   
   VoHomoAbsorption::VoHomoAbsorption(const std::shared_ptr<BfConstant>& blockFunc) : 
       VolumeOptics(),
       m_blockFunc(blockFunc)
   {
       PH_ASSERT(blockFunc);
   }
   
   VoHomoAbsorption::~VoHomoAbsorption() = default;
   
   void VoHomoAbsorption::sampleDistance(
       const SurfaceHit& X,
       const math::Vector3R& L,
       const real maxDist,
       real* const out_dist,
       math::Spectrum* const out_pdfAppliedWeight) const
   {
       PH_ASSERT(m_blockFunc && out_dist && out_pdfAppliedWeight);
   
       *out_dist = maxDist;
   
       // PDF = 1
       *out_pdfAppliedWeight = m_blockFunc->calcTransmittance(maxDist);
   }
   
   }// end namespace ph
