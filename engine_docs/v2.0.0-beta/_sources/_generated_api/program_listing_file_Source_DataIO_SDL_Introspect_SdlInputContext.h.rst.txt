
.. _program_listing_file_Source_DataIO_SDL_Introspect_SdlInputContext.h:

Program Listing for File SdlInputContext.h
==========================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_DataIO_SDL_Introspect_SdlInputContext.h>` (``Source\DataIO\SDL\Introspect\SdlInputContext.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "DataIO/SDL/Introspect/SdlIOContext.h"
   #include "DataIO/FileSystem/Path.h"
   #include "Common/assertion.h"
   
   #include <utility>
   #include <string>
   
   namespace ph { class SceneDescription; }
   
   namespace ph
   {
   
   class SdlInputContext final : public SdlIOContext
   {
   public:
       SdlInputContext();
   
       SdlInputContext(
           const SceneDescription* scene,
           Path                    workingDirectory,
           const SdlClass*         srcClass);
   
       const SceneDescription* getRawScene() const;
   
   private:
       const SceneDescription* m_rawScene;
   };
   
   // In-header Implementation:
   
   inline SdlInputContext::SdlInputContext() :
       SdlIOContext(),
       m_rawScene(nullptr)
   {}
   
   inline SdlInputContext::SdlInputContext(
       const SceneDescription* const scene,
       Path                          workingDirectory,
       const SdlClass* const         srcClass) :
   
       SdlIOContext(std::move(workingDirectory), srcClass),
   
       m_rawScene(scene)
   {
       PH_ASSERT(m_rawScene);
   }
   
   inline const SceneDescription* SdlInputContext::getRawScene() const
   {
       return m_rawScene;
   }
   
   }// end namespace ph
