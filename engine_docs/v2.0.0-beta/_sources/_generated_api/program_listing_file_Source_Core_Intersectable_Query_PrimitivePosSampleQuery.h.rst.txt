
.. _program_listing_file_Source_Core_Intersectable_Query_PrimitivePosSampleQuery.h:

Program Listing for File PrimitivePosSampleQuery.h
==================================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Core_Intersectable_Query_PrimitivePosSampleQuery.h>` (``Source\Core\Intersectable\Query\PrimitivePosSampleQuery.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Common/primitive_type.h"
   #include "Common/assertion.h"
   #include "Math/TVector3.h"
   
   #include <cstddef>
   
   namespace ph
   {
   
   class PrimitivePosSampleInput final
   {};
   
   class PrimitivePosSampleOutput final
   {
   public:
       math::Vector3R position;
       math::Vector3R normal;
       math::Vector3R uvw;
       std::size_t    faceId;
       real           pdfA;
   
       PrimitivePosSampleOutput();
       operator bool () const;
   };
   
   class PrimitivePosSampleQuery final
   {
   public:
       using Input  = PrimitivePosSampleInput;
       using Output = PrimitivePosSampleOutput;
   
       Input  in;
       Output out;
   
       PrimitivePosSampleQuery();
   };
   
   // In-header Implementations:
   
   inline PrimitivePosSampleOutput::operator bool () const
   {
       PH_ASSERT_IN_RANGE(normal.length(), 0.9_r, 1.1_r);
       return pdfA > 0;
   }
   
   inline PrimitivePosSampleQuery::PrimitivePosSampleQuery() :
       in(), out()
   {}
   
   }// end namespace ph
