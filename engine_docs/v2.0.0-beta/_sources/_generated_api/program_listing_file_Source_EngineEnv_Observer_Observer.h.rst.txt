
.. _program_listing_file_Source_EngineEnv_Observer_Observer.h:

Program Listing for File Observer.h
===================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_EngineEnv_Observer_Observer.h>` (``Source\EngineEnv\Observer\Observer.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "EngineEnv/CoreSdlResource.h"
   #include "DataIO/SDL/sdl_interface.h"
   
   #include <memory>
   
   namespace ph
   {
   
   class Observer : public CoreSdlResource
   {
   public:
       static constexpr ETypeCategory CATEGORY = ETypeCategory::Ref_Observer;
   
   public:
       inline Observer() = default;
   
       void cook(const CoreCookingContext& ctx, CoreCookedUnit& cooked) override = 0;
   
       ETypeCategory getDynamicCategory() const override;
   
   public:
       PH_DEFINE_SDL_CLASS(TOwnerSdlClass<Observer>)
       {
           ClassType clazz("observer");
           clazz.docName("Observer");
           clazz.description("A tool for observing the incoming energy of the scene.");
           return clazz;
       }
   };
   
   // In-header Implementations:
   
   inline ETypeCategory Observer::getDynamicCategory() const
   {
       return CATEGORY;
   }
   
   }// end namespace ph
