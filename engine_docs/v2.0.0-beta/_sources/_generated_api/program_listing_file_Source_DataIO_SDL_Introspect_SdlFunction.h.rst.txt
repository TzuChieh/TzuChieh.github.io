
.. _program_listing_file_Source_DataIO_SDL_Introspect_SdlFunction.h:

Program Listing for File SdlFunction.h
======================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_DataIO_SDL_Introspect_SdlFunction.h>` (``Source\DataIO\SDL\Introspect\SdlFunction.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Common/assertion.h"
   #include "Common/logging.h"
   
   #include <string>
   #include <utility>
   
   namespace ph
   {
   
   PH_DEFINE_EXTERNAL_LOG_GROUP(SdlFunction, SDL);
   
   class SdlField;
   class SdlInputContext;
   class ValueClauses;
   class ISdlResource;
   
   class SdlFunction
   {
   public:
       explicit SdlFunction(std::string name);
       virtual ~SdlFunction() = default;
   
       virtual void call(
           ISdlResource*          resource,
           ValueClauses&          clauses,
           const SdlInputContext& ctx) const = 0;
   
       // TODO: saveCall() & asyncCall() ?
   
       virtual std::size_t numParams() const = 0;
       virtual const SdlField* getParam(std::size_t index) const = 0;
   
       std::string genPrettyName() const;
       const std::string& getName() const;
       const std::string& getDescription() const;
   
   protected:
       SdlFunction& setDescription(std::string description);
   
   private:
       std::string m_name;
       std::string m_description;
   };
   
   // In-header Implementations:
   
   inline SdlFunction::SdlFunction(std::string name) : 
       m_name       (std::move(name)),
       m_description()
   {
       PH_ASSERT(!m_name.empty());
   }
   
   inline const std::string& SdlFunction::getName() const
   {
       return m_name;
   }
   
   inline const std::string& SdlFunction::getDescription() const
   {
       return m_description;
   }
   
   inline SdlFunction& SdlFunction::setDescription(std::string description)
   {
       m_description = std::move(description);
   
       return *this;
   }
   
   }// end namespace ph
