
.. _program_listing_file_Source_Frame_FrameProcessingPipeline.h:

Program Listing for File FrameProcessingPipeline.h
==================================================

|exhale_lsh| :ref:`Return to documentation for file <file_Source_Frame_FrameProcessingPipeline.h>` (``Source\Frame\FrameProcessingPipeline.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include "Frame/Operator/FrameOperator.h"
   #include "Frame/TFrame.h"
   #include "Utility/IMoveOnly.h"
   
   #include <vector>
   #include <memory>
   
   namespace ph
   {
   
   class FrameProcessingPipeline final : private IMoveOnly
   {
   public:
       inline FrameProcessingPipeline() = default;
       FrameProcessingPipeline(FrameProcessingPipeline&& other);
   
       void process(const HdrRgbFrame& srcFrame, HdrRgbFrame* out_dstFrame);
       void appendOperator(std::unique_ptr<FrameOperator> op);
   
       FrameProcessingPipeline& operator = (FrameProcessingPipeline&& rhs);
   
   private:
       std::vector<std::unique_ptr<FrameOperator>> m_operators;
       HdrRgbFrame                                 m_tmpFrame;
   };
   
   }// end namespace ph
